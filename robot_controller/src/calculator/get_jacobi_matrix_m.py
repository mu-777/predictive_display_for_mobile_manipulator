#!/usr/bin/env python
# -*- coding: utf-8 -*-

import rospy
from numpy import sin, cos, pi, zeros, linalg, rad2deg, deg2rad, dot
import tf2_ros
import common
from utils.mico_utils import dh_to_mico, mico_to_dh
from check_transform_matrix import TransMatManager
from tf.transformations import euler_from_matrix

PARAM_NAME_MOBILE_WHEEL_RADIUS = '/mobile_wheel_radius'
PARAM_NAME_MOBILE_AXLE_TRACK = '/mobile_axle_track'


def calc_jacobi_matrix(th1, th2, th3, th4, th5, th6, thb):
    J = zeros([6, 8])

    Rw, T, lb = 0.16, 0.34, 0.150

    sin_th1, sin_th2, sin_th3, sin_th4, sin_th5, sin_th6, sin_thb, sin_th1_thb, sin_th2_th3, sin_th4_th5 = sin([th1, th2, th3, th4, th5, th6, thb, (th1 - thb), (th2 - th3), (th4 - th5)])
    cos_th1, cos_th2, cos_th3, cos_th4, cos_th5, cos_th6, cos_thb, cos_th1_thb, cos_th2_th3, cos_th4_th5 = cos([th1, th2, th3, th4, th5, th6, thb, (th1 - thb), (th2 - th3), (th4 - th5)])

    J[0, 0] = (741*cos_th1_thb*cos_th4)/20000 - (7*cos_th1_thb)/1000 - (29*sin_th1_thb*sin_th2)/100 + (23378971420474269311*sin_th2_th3*sin_th1_thb)/90071992547409920000 - (741*cos_th1_thb*cos_th4*cos_th5)/40000 + (741*cos_th1_thb*sin_th4*sin_th5)/20000 - (741*cos_th2_th3*sin_th1_thb*sin_th4)/20000 + (3*sin_th2_th3*sin_th1_thb*cos_th5)/25 + (259718055242285597*3**0.5*cos_th1_thb*cos_th4)/3602879701896396800 + (741*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5)/20000 + (741*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4)/40000 - (3**0.5*cos_th1_thb*cos_th4*cos_th5)/25 + (2*3**0.5*cos_th1_thb*sin_th4*sin_th5)/25 - (259718055242285597*3**0.5*cos_th2_th3*sin_th1_thb*sin_th4)/3602879701896396800 + (741*3**0.5*sin_th2_th3*sin_th1_thb*cos_th5)/40000 + (2*3**0.5*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5)/25 + (3**0.5*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4)/25

    J[0, 1] = -(cos_th1_thb*(23378971420474269311*cos_th2_th3 - 26120877838748876800*cos_th2 + 10808639105689190400*cos_th2_th3*cos_th5 + 3337167323881537536*sin_th2_th3*sin_th4 - 3337167323881537536*sin_th2_th3*cos_th4*sin_th5 - 1668583661940768768*sin_th2_th3*cos_th5*sin_th4 + 1668583661940768768*3**0.5*cos_th2_th3*cos_th5 + 6492951381057139925*3**0.5*sin_th2_th3*sin_th4 - 7205759403792793600*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3602879701896396800*3**0.5*sin_th2_th3*cos_th5*sin_th4))/90071992547409920000

    J[0, 2] = (cos_th1_thb*(23378971420474269311*cos_th2_th3 + 10808639105689190400*cos_th2_th3*cos_th5 + 3337167323881537536*sin_th2_th3*sin_th4 - 3337167323881537536*sin_th2_th3*cos_th4*sin_th5 - 1668583661940768768*sin_th2_th3*cos_th5*sin_th4 + 1668583661940768768*3**0.5*cos_th2_th3*cos_th5 + 6492951381057139925*3**0.5*sin_th2_th3*sin_th4 - 7205759403792793600*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3602879701896396800*3**0.5*sin_th2_th3*cos_th5*sin_th4))/90071992547409920000

    J[0, 3] = (741*sin_th1_thb*cos_th4*sin_th5)/20000 - (741*sin_th1_thb*sin_th4)/20000 + (741*sin_th1_thb*cos_th5*sin_th4)/40000 + (741*cos_th2_th3*cos_th1_thb*cos_th4)/20000 - (259718055242285597*3**0.5*sin_th1_thb*sin_th4)/3602879701896396800 - (741*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5)/40000 + (741*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5)/20000 + (2*3**0.5*sin_th1_thb*cos_th4*sin_th5)/25 + (3**0.5*sin_th1_thb*cos_th5*sin_th4)/25 + (259718055242285597*3**0.5*cos_th2_th3*cos_th1_thb*cos_th4)/3602879701896396800 - (3**0.5*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5)/25 + (2*3**0.5*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5)/25

    J[0, 4] = (741*sin_th1_thb*cos_th4*sin_th5)/40000 + (741*sin_th1_thb*cos_th5*sin_th4)/20000 + (3*cos_th1_thb*sin_th2_th3*sin_th5)/25 - (741*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5)/20000 + (741*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5)/40000 + (3**0.5*sin_th1_thb*cos_th4*sin_th5)/25 + (2*3**0.5*sin_th1_thb*cos_th5*sin_th4)/25 + (741*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5)/40000 - (2*3**0.5*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5)/25 + (3**0.5*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5)/25

    J[0, 5] = 0

    J[0, 6] = -(Rw*(3337167323881537536*cos_th1_thb*cos_th4 - 630503947831869440*cos_th1_thb - 26120877838748876800*sin_th1_thb*sin_th2 - 45035996273704960000*T*cos_thb + 23378971420474269311*sin_th2_th3*sin_th1_thb + 90071992547409920000*lb*sin_thb - 1668583661940768768*cos_th1_thb*cos_th4*cos_th5 + 3337167323881537536*cos_th1_thb*sin_th4*sin_th5 - 3337167323881537536*cos_th2_th3*sin_th1_thb*sin_th4 + 10808639105689190400*sin_th2_th3*sin_th1_thb*cos_th5 + 6492951381057139925*3**0.5*cos_th1_thb*cos_th4 + 3337167323881537536*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5 + 1668583661940768768*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4 - 3602879701896396800*3**0.5*cos_th1_thb*cos_th4*cos_th5 + 7205759403792793600*3**0.5*cos_th1_thb*sin_th4*sin_th5 - 6492951381057139925*3**0.5*cos_th2_th3*sin_th1_thb*sin_th4 + 1668583661940768768*3**0.5*sin_th2_th3*sin_th1_thb*cos_th5 + 7205759403792793600*3**0.5*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5 + 3602879701896396800*3**0.5*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4))/(90071992547409920000*T)

    J[0, 7] = (Rw*(3337167323881537536*cos_th1_thb*cos_th4 - 630503947831869440*cos_th1_thb - 26120877838748876800*sin_th1_thb*sin_th2 + 45035996273704960000*T*cos_thb + 23378971420474269311*sin_th2_th3*sin_th1_thb + 90071992547409920000*lb*sin_thb - 1668583661940768768*cos_th1_thb*cos_th4*cos_th5 + 3337167323881537536*cos_th1_thb*sin_th4*sin_th5 - 3337167323881537536*cos_th2_th3*sin_th1_thb*sin_th4 + 10808639105689190400*sin_th2_th3*sin_th1_thb*cos_th5 + 6492951381057139925*3**0.5*cos_th1_thb*cos_th4 + 3337167323881537536*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5 + 1668583661940768768*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4 - 3602879701896396800*3**0.5*cos_th1_thb*cos_th4*cos_th5 + 7205759403792793600*3**0.5*cos_th1_thb*sin_th4*sin_th5 - 6492951381057139925*3**0.5*cos_th2_th3*sin_th1_thb*sin_th4 + 1668583661940768768*3**0.5*sin_th2_th3*sin_th1_thb*cos_th5 + 7205759403792793600*3**0.5*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5 + 3602879701896396800*3**0.5*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4))/(90071992547409920000*T)

    J[1, 0] = (7*sin_th1_thb)/1000 - (29*cos_th1_thb*sin_th2)/100 - (741*sin_th1_thb*cos_th4)/20000 + (23378971420474269311*cos_th1_thb*sin_th2_th3)/90071992547409920000 + (741*sin_th1_thb*cos_th4*cos_th5)/40000 - (741*sin_th1_thb*sin_th4*sin_th5)/20000 - (741*cos_th2_th3*cos_th1_thb*sin_th4)/20000 + (3*cos_th1_thb*sin_th2_th3*cos_th5)/25 - (259718055242285597*3**0.5*sin_th1_thb*cos_th4)/3602879701896396800 + (741*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5)/20000 + (741*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4)/40000 + (3**0.5*sin_th1_thb*cos_th4*cos_th5)/25 - (2*3**0.5*sin_th1_thb*sin_th4*sin_th5)/25 - (259718055242285597*3**0.5*cos_th2_th3*cos_th1_thb*sin_th4)/3602879701896396800 + (741*3**0.5*cos_th1_thb*sin_th2_th3*cos_th5)/40000 + (2*3**0.5*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5)/25 + (3**0.5*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4)/25

    J[1, 1] = (sin_th1_thb*(23378971420474269311*cos_th2_th3 - 26120877838748876800*cos_th2 + 10808639105689190400*cos_th2_th3*cos_th5 + 3337167323881537536*sin_th2_th3*sin_th4 - 3337167323881537536*sin_th2_th3*cos_th4*sin_th5 - 1668583661940768768*sin_th2_th3*cos_th5*sin_th4 + 1668583661940768768*3**0.5*cos_th2_th3*cos_th5 + 6492951381057139925*3**0.5*sin_th2_th3*sin_th4 - 7205759403792793600*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3602879701896396800*3**0.5*sin_th2_th3*cos_th5*sin_th4))/90071992547409920000

    J[1, 2] = -(sin_th1_thb*(23378971420474269311*cos_th2_th3 + 10808639105689190400*cos_th2_th3*cos_th5 + 3337167323881537536*sin_th2_th3*sin_th4 - 3337167323881537536*sin_th2_th3*cos_th4*sin_th5 - 1668583661940768768*sin_th2_th3*cos_th5*sin_th4 + 1668583661940768768*3**0.5*cos_th2_th3*cos_th5 + 6492951381057139925*3**0.5*sin_th2_th3*sin_th4 - 7205759403792793600*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3602879701896396800*3**0.5*sin_th2_th3*cos_th5*sin_th4))/90071992547409920000

    J[1, 3] = (741*cos_th1_thb*cos_th4*sin_th5)/20000 - (741*cos_th1_thb*sin_th4)/20000 + (741*cos_th1_thb*cos_th5*sin_th4)/40000 - (741*cos_th2_th3*sin_th1_thb*cos_th4)/20000 - (259718055242285597*3**0.5*cos_th1_thb*sin_th4)/3602879701896396800 + (741*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5)/40000 - (741*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5)/20000 + (2*3**0.5*cos_th1_thb*cos_th4*sin_th5)/25 + (3**0.5*cos_th1_thb*cos_th5*sin_th4)/25 - (259718055242285597*3**0.5*cos_th2_th3*sin_th1_thb*cos_th4)/3602879701896396800 + (3**0.5*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5)/25 - (2*3**0.5*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5)/25

    J[1, 4] = (741*cos_th1_thb*cos_th4*sin_th5)/40000 + (741*cos_th1_thb*cos_th5*sin_th4)/20000 - (3*sin_th2_th3*sin_th1_thb*sin_th5)/25 + (741*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5)/20000 - (741*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5)/40000 + (3**0.5*cos_th1_thb*cos_th4*sin_th5)/25 + (2*3**0.5*cos_th1_thb*cos_th5*sin_th4)/25 - (741*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5)/40000 + (2*3**0.5*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5)/25 - (3**0.5*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5)/25

    J[1, 5] = 0

    J[1, 6] = -(Rw*(630503947831869440*sin_th1_thb - 26120877838748876800*cos_th1_thb*sin_th2 - 3337167323881537536*sin_th1_thb*cos_th4 + 23378971420474269311*cos_th1_thb*sin_th2_th3 - 45035996273704960000*T*sin_thb - 90071992547409920000*lb*cos_thb + 1668583661940768768*sin_th1_thb*cos_th4*cos_th5 - 3337167323881537536*sin_th1_thb*sin_th4*sin_th5 - 3337167323881537536*cos_th2_th3*cos_th1_thb*sin_th4 + 10808639105689190400*cos_th1_thb*sin_th2_th3*cos_th5 - 6492951381057139925*3**0.5*sin_th1_thb*cos_th4 + 3337167323881537536*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5 + 1668583661940768768*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4 + 3602879701896396800*3**0.5*sin_th1_thb*cos_th4*cos_th5 - 7205759403792793600*3**0.5*sin_th1_thb*sin_th4*sin_th5 - 6492951381057139925*3**0.5*cos_th2_th3*cos_th1_thb*sin_th4 + 1668583661940768768*3**0.5*cos_th1_thb*sin_th2_th3*cos_th5 + 7205759403792793600*3**0.5*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5 + 3602879701896396800*3**0.5*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4))/(90071992547409920000*T)

    J[1, 7] = (Rw*(630503947831869440*sin_th1_thb - 26120877838748876800*cos_th1_thb*sin_th2 - 3337167323881537536*sin_th1_thb*cos_th4 + 23378971420474269311*cos_th1_thb*sin_th2_th3 + 45035996273704960000*T*sin_thb - 90071992547409920000*lb*cos_thb + 1668583661940768768*sin_th1_thb*cos_th4*cos_th5 - 3337167323881537536*sin_th1_thb*sin_th4*sin_th5 - 3337167323881537536*cos_th2_th3*cos_th1_thb*sin_th4 + 10808639105689190400*cos_th1_thb*sin_th2_th3*cos_th5 - 6492951381057139925*3**0.5*sin_th1_thb*cos_th4 + 3337167323881537536*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5 + 1668583661940768768*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4 + 3602879701896396800*3**0.5*sin_th1_thb*cos_th4*cos_th5 - 7205759403792793600*3**0.5*sin_th1_thb*sin_th4*sin_th5 - 6492951381057139925*3**0.5*cos_th2_th3*cos_th1_thb*sin_th4 + 1668583661940768768*3**0.5*cos_th1_thb*sin_th2_th3*cos_th5 + 7205759403792793600*3**0.5*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5 + 3602879701896396800*3**0.5*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4))/(90071992547409920000*T)

    J[2, 0] = 0

    J[2, 1] = (29*sin_th2)/100 - (23378971420474269311*sin_th2_th3)/90071992547409920000 - (2223*cos_th2_th3*sin(th4 + th5))/80000 + (741*cos_th2_th3*sin_th4)/20000 - (3*sin_th2_th3*cos_th5)/25 + (741*cos_th2_th3*sin_th4_th5)/80000 - (3*3**0.5*cos_th2_th3*sin(th4 + th5))/50 + (259718055242285597*3**0.5*cos_th2_th3*sin_th4)/3602879701896396800 - (741*3**0.5*sin_th2_th3*cos_th5)/40000 + (3**0.5*cos_th2_th3*sin_th4_th5)/50

    J[2, 2] = (23378971420474269311*sin_th2_th3)/90071992547409920000 - (741*cos_th2_th3*sin_th4)/20000 + (3*sin_th2_th3*cos_th5)/25 + (741*cos_th2_th3*cos_th4*sin_th5)/20000 + (741*cos_th2_th3*cos_th5*sin_th4)/40000 - (259718055242285597*3**0.5*cos_th2_th3*sin_th4)/3602879701896396800 + (741*3**0.5*sin_th2_th3*cos_th5)/40000 + (2*3**0.5*cos_th2_th3*cos_th4*sin_th5)/25 + (3**0.5*cos_th2_th3*cos_th5*sin_th4)/25

    J[2, 3] = (sin_th2_th3*(834291830970384384*cos_th4_th5 - 2502875492911153152*cos(th4 + th5) + 3337167323881537536*cos_th4 - 5404319552844595200*3**0.5*cos(th4 + th5) + 6492951381057139925*3**0.5*cos_th4 + 1801439850948198400*3**0.5*cos_th4_th5))/90071992547409920000

    J[2, 4] = - (2223*sin_th2_th3*cos(th4 + th5))/80000 - (3*cos_th2_th3*sin_th5)/25 - (741*cos_th4_th5*sin_th2_th3)/80000 - (3*3**0.5*sin_th2_th3*cos(th4 + th5))/50 - (741*3**0.5*cos_th2_th3*sin_th5)/40000 - (3**0.5*cos_th4_th5*sin_th2_th3)/50

    J[2, 5] = 0

    J[2, 6] = 0

    J[2, 7] = 0

    J[3, 0] = 0

    J[3, 1] = ((cos_th6*((3*cos_th2_th3*cos(th4 + th5))/4 + (cos_th2_th3*cos_th4_th5)/4 - (3**0.5*sin_th2_th3*sin_th5)/2) - sin_th6*((3*cos_th2_th3*sin(th4 + th5))/8 - (cos_th2_th3*sin_th4_th5)/8 + (3**0.5*sin_th2_th3*cos_th5)/4) + (3**0.5*sin_th6*(sin_th2_th3/2 - (3**0.5*cos_th2_th3*sin_th4)/2))/2)/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4) + ((sin_th2_th3/4 + (3**0.5*((3*cos_th2_th3*sin(th4 + th5))/4 - (cos_th2_th3*sin_th4_th5)/4 + (3**0.5*sin_th2_th3*cos_th5)/2))/2 - (3**0.5*cos_th2_th3*sin_th4)/4)*(sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2))/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2)/((sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)**2/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2 + 1)

    J[3, 2] = -((cos_th6*((3*cos_th2_th3*cos(th4 + th5))/4 + (cos_th2_th3*cos_th4_th5)/4 - (3**0.5*sin_th2_th3*sin_th5)/2) - sin_th6*((3*cos_th2_th3*sin(th4 + th5))/8 - (cos_th2_th3*sin_th4_th5)/8 + (3**0.5*sin_th2_th3*cos_th5)/4) + (3**0.5*sin_th6*(sin_th2_th3/2 - (3**0.5*cos_th2_th3*sin_th4)/2))/2)/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4) + ((sin_th2_th3/4 + (3**0.5*((3*cos_th2_th3*sin(th4 + th5))/4 - (cos_th2_th3*sin_th4_th5)/4 + (3**0.5*sin_th2_th3*cos_th5)/2))/2 - (3**0.5*cos_th2_th3*sin_th4)/4)*(sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2))/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2)/((sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)**2/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2 + 1)

    J[3, 3] = -((sin_th2_th3*(3*cos_th4*sin_th6 - 2*sin_th4*sin_th5*sin_th6 + cos_th4*cos_th5*sin_th6 + 2*cos_th4*cos_th6*sin_th5 + 4*cos_th5*cos_th6*sin_th4))/(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4) - (2*3**0.5*sin_th2_th3*(2*cos_th4 - 2*cos_th4*cos_th5 + 4*sin_th4*sin_th5)*((3*sin_th2_th3*sin_th4*sin_th6)/4 + (3**0.5*cos_th2_th3*sin_th6)/4 - sin_th2_th3*cos_th4*cos_th5*cos_th6 + (sin_th2_th3*cos_th4*sin_th5*sin_th6)/2 + (sin_th2_th3*cos_th5*sin_th4*sin_th6)/4 + (sin_th2_th3*cos_th6*sin_th4*sin_th5)/2 - (3**0.5*cos_th2_th3*cos_th5*sin_th6)/4 - (3**0.5*cos_th2_th3*cos_th6*sin_th5)/2))/(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2)/((sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2/(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + 1)

    J[3, 4] = ((cos_th6*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2) - sin_th6*((3*sin_th2_th3*cos(th4 + th5))/8 + (cos_th4_th5*sin_th2_th3)/8 + (3**0.5*cos_th2_th3*sin_th5)/4))/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4) + (3**0.5*(sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2))/(2*(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2))/((sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)**2/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2 + 1)

    J[3, 5] = -(sin_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - cos_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + (3**0.5*cos_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)/(((sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)**2/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2 + 1)*(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4))

    J[3, 6] = 0

    J[3, 7] = 0

    J[4, 0] = 0

    J[4, 1] = ((3*cos_th2_th3*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th5*sin_th6)/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**0.5 + ((2*(sin_th2_th3 + 3*sin_th2_th3*cos_th5 - 3**0.5*cos_th2_th3*sin_th4 + 2*3**0.5*cos_th2_th3*cos_th4*sin_th5 + 3**0.5*cos_th2_th3*cos_th5*sin_th4)*(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4) - 2*(2*cos_th6*(cos_th2_th3*sin_th4*sin_th5 - 2*cos_th2_th3*cos_th4*cos_th5 + 3**0.5*sin_th2_th3*sin_th5) + sin_th6*(2*cos_th2_th3*cos_th4*sin_th5 + cos_th2_th3*cos_th5*sin_th4 + 3**0.5*sin_th2_th3*cos_th5) + sin_th6*(3*cos_th2_th3*sin_th4 - 3**0.5*sin_th2_th3))*(sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3)))*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(2*((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**1.5))/((3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)**2/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2) + 1)

    J[4, 2] = -((3*cos_th2_th3*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th5*sin_th6)/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**0.5 + ((2*(sin_th2_th3 + 3*sin_th2_th3*cos_th5 - 3**0.5*cos_th2_th3*sin_th4 + 2*3**0.5*cos_th2_th3*cos_th4*sin_th5 + 3**0.5*cos_th2_th3*cos_th5*sin_th4)*(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4) - 2*(2*cos_th6*(cos_th2_th3*sin_th4*sin_th5 - 2*cos_th2_th3*cos_th4*cos_th5 + 3**0.5*sin_th2_th3*sin_th5) + sin_th6*(2*cos_th2_th3*cos_th4*sin_th5 + cos_th2_th3*cos_th5*sin_th4 + 3**0.5*sin_th2_th3*cos_th5) + sin_th6*(3*cos_th2_th3*sin_th4 - 3**0.5*sin_th2_th3))*(sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3)))*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(2*((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**1.5))/((3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)**2/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2) + 1)

    J[4, 3] = -((sin_th2_th3*(2*cos_th4*sin_th5*sin_th6 - 3*cos_th4*cos_th6 + 4*cos_th5*sin_th4*sin_th6 + 2*cos_th6*sin_th4*sin_th5 - cos_th4*cos_th5*cos_th6))/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**0.5 + ((2*sin_th2_th3*(sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))*(3*cos_th4*sin_th6 - 2*sin_th4*sin_th5*sin_th6 + cos_th4*cos_th5*sin_th6 + 2*cos_th4*cos_th6*sin_th5 + 4*cos_th5*cos_th6*sin_th4) + 2*3**0.5*sin_th2_th3*(cos_th4 - cos_th4*cos_th5 + 2*sin_th4*sin_th5)*(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4))*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(2*((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**1.5))/((3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)**2/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2) + 1)

    J[4, 4] = ((2*sin_th2_th3*cos_th4*cos_th5*cos_th6 - 4*sin_th2_th3*cos_th4*sin_th5*sin_th6 - 2*sin_th2_th3*cos_th5*sin_th4*sin_th6 - sin_th2_th3*cos_th6*sin_th4*sin_th5 + 2*3**0.5*cos_th2_th3*cos_th5*sin_th6 + 3**0.5*cos_th2_th3*cos_th6*sin_th5)/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**0.5 - ((2*(2*cos_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) + sin_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5))*(sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3)) - 2*(3*cos_th2_th3*sin_th5 + 2*3**0.5*sin_th2_th3*cos_th4*cos_th5 - 3**0.5*sin_th2_th3*sin_th4*sin_th5)*(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4))*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(2*((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**1.5))/((3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)**2/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2) + 1)

    J[4, 5] = -((3*sin_th2_th3*sin_th4*sin_th6 + 3**0.5*cos_th2_th3*sin_th6 - 4*sin_th2_th3*cos_th4*cos_th5*cos_th6 + 2*sin_th2_th3*cos_th4*sin_th5*sin_th6 + sin_th2_th3*cos_th5*sin_th4*sin_th6 + 2*sin_th2_th3*cos_th6*sin_th4*sin_th5 - 3**0.5*cos_th2_th3*cos_th5*sin_th6 - 2*3**0.5*cos_th2_th3*cos_th6*sin_th5)/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**0.5 + ((cos_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) + cos_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3) + 2*sin_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5))*(sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**1.5)/((3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)**2/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2) + 1)

    J[4, 6] = 0

    J[4, 7] = 0

    J[5, 0] = -1

    J[5, 1] = ((sin_th1_thb*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6) - (cos_th1_thb*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)*(2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2)/((2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6)**2/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2 + 1)

    J[5, 2] = -((sin_th1_thb*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6) - (cos_th1_thb*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)*(2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2)/((2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6)**2/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2 + 1)

    J[5, 3] = -((3*cos_th1_thb*cos_th6*sin_th4 + 4*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6 + cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4*sin_th5)/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6) + ((3*sin_th1_thb*cos_th6*sin_th4 + 4*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*sin_th1_thb*cos_th4*cos_th6*sin_th5 + sin_th1_thb*cos_th5*cos_th6*sin_th4 - 3*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6 - 2*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5*sin_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4*sin_th5 - cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*cos_th6)*(2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2)/((2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6)**2/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2 + 1)

    J[5, 4] = ((4*cos_th1_thb*sin_th4*sin_th5*sin_th6 - cos_th1_thb*cos_th4*cos_th6*sin_th5 - 2*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th1_thb*cos_th4*cos_th5*sin_th6 - 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4*sin_th6 + cos_th2_th3*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 2*3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6*sin_th5)/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6) - ((2*sin_th1_thb*cos_th4*cos_th5*sin_th6 + sin_th1_thb*cos_th4*cos_th6*sin_th5 + 2*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 4*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4*sin_th6 + cos_th2_th3*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 2*3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6*sin_th5 - 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*cos_th6)*(2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2)/((2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6)**2/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2 + 1)

    J[5, 5] = ((2*cos_th1_thb*sin_th4*sin_th5*sin_th6 - cos_th1_thb*cos_th4*cos_th5*sin_th6 - 2*cos_th1_thb*cos_th4*cos_th6*sin_th5 - 4*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 3*cos_th1_thb*cos_th4*sin_th6 + 3*cos_th2_th3*sin_th1_thb*sin_th4*sin_th6 - 3**0.5*sin_th2_th3*sin_th1_thb*sin_th6 - 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*cos_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5*sin_th6 + cos_th2_th3*sin_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*sin_th6 + 2*3**0.5*sin_th2_th3*sin_th1_thb*cos_th6*sin_th5)/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6) - ((3*sin_th1_thb*cos_th4*sin_th6 + sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*sin_th1_thb*cos_th4*cos_th6*sin_th5 + 4*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3*cos_th2_th3*cos_th1_thb*sin_th4*sin_th6 - 3**0.5*cos_th1_thb*sin_th2_th3*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5*sin_th6 + cos_th2_th3*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*sin_th6 + 2*3**0.5*cos_th1_thb*sin_th2_th3*cos_th6*sin_th5 - 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*cos_th6)*(2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2)/((2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6)**2/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2 + 1)

    J[5, 6] = Rw/T

    J[5, 7] = -Rw/T

    return J



def get_jacobi_matrix(joint_angles, mobile_base_theta):
    th1, th2, th3, th4, th5, th6 = dh_to_mico(joint_angles.joint1, joint_angles.joint2, joint_angles.joint3,
                                              joint_angles.joint4, joint_angles.joint5, joint_angles.joint6)
    thb = mobile_base_theta
    return calc_jacobi_matrix(th1, th2, th3, th4, th5, th6, thb)



# --------------------------------------------
if __name__ == '__main__':
    # th1, th2, th3, th4, th5, th6 = dh_to_mico(0.0, -pi*2/3, pi/6, 0.0, pi, pi/2)
    th1, th2, th3, th4, th5, th6 = dh_to_mico(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
    # th1, th2, th3, th4, th5, th6 = dh_to_mico(0.0, -pi/2, -pi/2, 0, pi, pi/2)
    thb = 0.0 #-1.57079637051

    jacobi = calc_jacobi_matrix(th1, th2, th3, th4, th5, th6, thb)
    print('jacobi')
    print(jacobi)
    print(linalg.matrix_rank(jacobi))

    arm_jacobi = jacobi[0:6, 0:6]
    print('arm_jacobi')
    print(arm_jacobi)
    print(linalg.matrix_rank(arm_jacobi))
    print(linalg.inv(arm_jacobi))

    # pinv_jacobi = linalg.pinv(jacobi)
    pinv_jacobi = jacobi.T.dot(linalg.inv(jacobi.dot(jacobi.T)))
    print('pinv_jacobi')
    print(pinv_jacobi)
    print(linalg.matrix_rank(pinv_jacobi))
    print(jacobi.dot(pinv_jacobi))

    th1, th2, th3, th4, th5, th6 = mico_to_dh(th1, th2, th3, th4, th5, th6)
    print(th1, th2, th3, th4, th5, th6)
    trans_mats = TransMatManager().update(th1, th2, th3, th4, th5, th6, thb).trans_mat_list
    trans = reduce(lambda t1, t2: t1*t2, trans_mats)
    print('trans')
    print(trans)
    print(linalg.matrix_rank(trans))
    print(rad2deg(euler_from_matrix(trans)))







    