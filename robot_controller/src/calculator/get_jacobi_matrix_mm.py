#!/usr/bin/env python
# -*- coding: utf-8 -*-

import rospy
from numpy import sin, cos, pi, zeros, linalg, rad2deg, deg2rad, dot
import tf2_ros
import common
from utils.mico_utils import dh_to_mico, mico_to_dh
from check_transform_matrix import TransMatManager
from tf.transformations import euler_from_matrix

PARAM_NAME_MOBILE_WHEEL_RADIUS = '/mobile_wheel_radius'
PARAM_NAME_MOBILE_AXLE_TRACK = '/mobile_axle_track'

"""
1. Matlabの計算結果をペーストする．
2. sin(th1), sin(th2), ..., cos(th4 - th5)をリプレースする（推奨．not必須）
3. ^を**にリプレースする（必須）
4. "**("で検索して，"**(1/2)"とか"**(3/2)"とかあれば，"**0.5"とか"**1.5"にリプレースする
"""
def calc_jacobi_matrix(th1, th2, th3, th4, th5, th6, thb):
    J = zeros([6, 8])

    Rw, T, lb = 0.16*1000, 0.34*1000, 0.150*1000

    sin_th1, sin_th2, sin_th3, sin_th4, sin_th5, sin_th6, sin_thb, sin_th1_thb, sin_th2_th3, sin_th4_th5 = sin([th1, th2, th3, th4, th5, th6, thb, (th1 - thb), (th2 - th3), (th4 - th5)])
    cos_th1, cos_th2, cos_th3, cos_th4, cos_th5, cos_th6, cos_thb, cos_th1_thb, cos_th2_th3, cos_th4_th5 = cos([th1, th2, th3, th4, th5, th6, thb, (th1 - thb), (th2 - th3), (th4 - th5)])

    J[0, 0] = (741*cos_th1_thb*cos_th4)/20 - 7*cos_th1_thb - 290*sin_th1_thb*sin_th2 + (45662053555613803*sin_th2_th3*sin_th1_thb)/175921860444160 - (741*cos_th1_thb*cos_th4*cos_th5)/40 + (741*cos_th1_thb*sin_th4*sin_th5)/20 - (741*cos_th2_th3*sin_th1_thb*sin_th4)/20 + 120*sin_th2_th3*sin_th1_thb*cos_th5 + (2536309133225445*3**0.5*cos_th1_thb*cos_th4)/35184372088832 + (741*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5)/20 + (741*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4)/40 - 40*3**0.5*cos_th1_thb*cos_th4*cos_th5 + 80*3**0.5*cos_th1_thb*sin_th4*sin_th5 - (2536309133225445*3**0.5*cos_th2_th3*sin_th1_thb*sin_th4)/35184372088832 + (741*3**0.5*sin_th2_th3*sin_th1_thb*cos_th5)/40 + 80*3**0.5*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5 + 40*3**0.5*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4
    
    J[0, 1] = -(cos_th1_thb*(45662053555613803*cos_th2_th3 - 51017339528806400*cos_th2 + 21110623253299200*cos_th2_th3*cos_th5 + 6517904929456128*sin_th2_th3*sin_th4 - 6517904929456128*sin_th2_th3*cos_th4*sin_th5 - 3258952464728064*sin_th2_th3*cos_th5*sin_th4 + 3258952464728064*3**0.5*cos_th2_th3*cos_th5 + 12681545666127225*3**0.5*sin_th2_th3*sin_th4 - 14073748835532800*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 7036874417766400*3**0.5*sin_th2_th3*cos_th5*sin_th4))/175921860444160
    
    J[0, 2] = (cos_th1_thb*(45662053555613803*cos_th2_th3 + 21110623253299200*cos_th2_th3*cos_th5 + 6517904929456128*sin_th2_th3*sin_th4 - 6517904929456128*sin_th2_th3*cos_th4*sin_th5 - 3258952464728064*sin_th2_th3*cos_th5*sin_th4 + 3258952464728064*3**0.5*cos_th2_th3*cos_th5 + 12681545666127225*3**0.5*sin_th2_th3*sin_th4 - 14073748835532800*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 7036874417766400*3**0.5*sin_th2_th3*cos_th5*sin_th4))/175921860444160
    
    J[0, 3] = (741*sin_th1_thb*cos_th4*sin_th5)/20 - (741*sin_th1_thb*sin_th4)/20 + (741*sin_th1_thb*cos_th5*sin_th4)/40 + (741*cos_th2_th3*cos_th1_thb*cos_th4)/20 - (2536309133225445*3**0.5*sin_th1_thb*sin_th4)/35184372088832 - (741*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5)/40 + (741*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5)/20 + 80*3**0.5*sin_th1_thb*cos_th4*sin_th5 + 40*3**0.5*sin_th1_thb*cos_th5*sin_th4 + (2536309133225445*3**0.5*cos_th2_th3*cos_th1_thb*cos_th4)/35184372088832 - 40*3**0.5*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5 + 80*3**0.5*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5
    
    J[0, 4] = (741*sin_th1_thb*cos_th4*sin_th5)/40 + (741*sin_th1_thb*cos_th5*sin_th4)/20 + 120*cos_th1_thb*sin_th2_th3*sin_th5 - (741*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5)/20 + (741*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5)/40 + 40*3**0.5*sin_th1_thb*cos_th4*sin_th5 + 80*3**0.5*sin_th1_thb*cos_th5*sin_th4 + (741*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5)/40 - 80*3**0.5*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5 + 40*3**0.5*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5
    
    J[0, 5] = 0
    
    J[0, 6] = -(Rw*(6517904929456128*cos_th1_thb*cos_th4 - 1231453023109120*cos_th1_thb - 51017339528806400*sin_th1_thb*sin_th2 - 87960930222080*T*cos_thb + 45662053555613803*sin_th2_th3*sin_th1_thb + 175921860444160*lb*sin_thb - 3258952464728064*cos_th1_thb*cos_th4*cos_th5 + 6517904929456128*cos_th1_thb*sin_th4*sin_th5 - 6517904929456128*cos_th2_th3*sin_th1_thb*sin_th4 + 21110623253299200*sin_th2_th3*sin_th1_thb*cos_th5 + 12681545666127225*3**0.5*cos_th1_thb*cos_th4 + 6517904929456128*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5 + 3258952464728064*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4 - 7036874417766400*3**0.5*cos_th1_thb*cos_th4*cos_th5 + 14073748835532800*3**0.5*cos_th1_thb*sin_th4*sin_th5 - 12681545666127225*3**0.5*cos_th2_th3*sin_th1_thb*sin_th4 + 3258952464728064*3**0.5*sin_th2_th3*sin_th1_thb*cos_th5 + 14073748835532800*3**0.5*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5 + 7036874417766400*3**0.5*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4))/(175921860444160*T)
    
    J[0, 7] = (Rw*(6517904929456128*cos_th1_thb*cos_th4 - 1231453023109120*cos_th1_thb - 51017339528806400*sin_th1_thb*sin_th2 + 87960930222080*T*cos_thb + 45662053555613803*sin_th2_th3*sin_th1_thb + 175921860444160*lb*sin_thb - 3258952464728064*cos_th1_thb*cos_th4*cos_th5 + 6517904929456128*cos_th1_thb*sin_th4*sin_th5 - 6517904929456128*cos_th2_th3*sin_th1_thb*sin_th4 + 21110623253299200*sin_th2_th3*sin_th1_thb*cos_th5 + 12681545666127225*3**0.5*cos_th1_thb*cos_th4 + 6517904929456128*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5 + 3258952464728064*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4 - 7036874417766400*3**0.5*cos_th1_thb*cos_th4*cos_th5 + 14073748835532800*3**0.5*cos_th1_thb*sin_th4*sin_th5 - 12681545666127225*3**0.5*cos_th2_th3*sin_th1_thb*sin_th4 + 3258952464728064*3**0.5*sin_th2_th3*sin_th1_thb*cos_th5 + 14073748835532800*3**0.5*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5 + 7036874417766400*3**0.5*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4))/(175921860444160*T)
    
    J[1, 0] = 7*sin_th1_thb - 290*cos_th1_thb*sin_th2 - (741*sin_th1_thb*cos_th4)/20 + (45662053555613803*cos_th1_thb*sin_th2_th3)/175921860444160 + (741*sin_th1_thb*cos_th4*cos_th5)/40 - (741*sin_th1_thb*sin_th4*sin_th5)/20 - (741*cos_th2_th3*cos_th1_thb*sin_th4)/20 + 120*cos_th1_thb*sin_th2_th3*cos_th5 - (2536309133225445*3**0.5*sin_th1_thb*cos_th4)/35184372088832 + (741*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5)/20 + (741*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4)/40 + 40*3**0.5*sin_th1_thb*cos_th4*cos_th5 - 80*3**0.5*sin_th1_thb*sin_th4*sin_th5 - (2536309133225445*3**0.5*cos_th2_th3*cos_th1_thb*sin_th4)/35184372088832 + (741*3**0.5*cos_th1_thb*sin_th2_th3*cos_th5)/40 + 80*3**0.5*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5 + 40*3**0.5*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4
    
    J[1, 1] = (sin_th1_thb*(45662053555613803*cos_th2_th3 - 51017339528806400*cos_th2 + 21110623253299200*cos_th2_th3*cos_th5 + 6517904929456128*sin_th2_th3*sin_th4 - 6517904929456128*sin_th2_th3*cos_th4*sin_th5 - 3258952464728064*sin_th2_th3*cos_th5*sin_th4 + 3258952464728064*3**0.5*cos_th2_th3*cos_th5 + 12681545666127225*3**0.5*sin_th2_th3*sin_th4 - 14073748835532800*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 7036874417766400*3**0.5*sin_th2_th3*cos_th5*sin_th4))/175921860444160
    
    J[1, 2] = -(sin_th1_thb*(45662053555613803*cos_th2_th3 + 21110623253299200*cos_th2_th3*cos_th5 + 6517904929456128*sin_th2_th3*sin_th4 - 6517904929456128*sin_th2_th3*cos_th4*sin_th5 - 3258952464728064*sin_th2_th3*cos_th5*sin_th4 + 3258952464728064*3**0.5*cos_th2_th3*cos_th5 + 12681545666127225*3**0.5*sin_th2_th3*sin_th4 - 14073748835532800*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 7036874417766400*3**0.5*sin_th2_th3*cos_th5*sin_th4))/175921860444160
    
    J[1, 3] = (741*cos_th1_thb*cos_th4*sin_th5)/20 - (741*cos_th1_thb*sin_th4)/20 + (741*cos_th1_thb*cos_th5*sin_th4)/40 - (741*cos_th2_th3*sin_th1_thb*cos_th4)/20 - (2536309133225445*3**0.5*cos_th1_thb*sin_th4)/35184372088832 + (741*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5)/40 - (741*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5)/20 + 80*3**0.5*cos_th1_thb*cos_th4*sin_th5 + 40*3**0.5*cos_th1_thb*cos_th5*sin_th4 - (2536309133225445*3**0.5*cos_th2_th3*sin_th1_thb*cos_th4)/35184372088832 + 40*3**0.5*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5 - 80*3**0.5*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5
    
    J[1, 4] = (741*cos_th1_thb*cos_th4*sin_th5)/40 + (741*cos_th1_thb*cos_th5*sin_th4)/20 - 120*sin_th2_th3*sin_th1_thb*sin_th5 + (741*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5)/20 - (741*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5)/40 + 40*3**0.5*cos_th1_thb*cos_th4*sin_th5 + 80*3**0.5*cos_th1_thb*cos_th5*sin_th4 - (741*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5)/40 + 80*3**0.5*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5 - 40*3**0.5*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5
    
    J[1, 5] = 0
    
    J[1, 6] = -(Rw*(1231453023109120*sin_th1_thb - 51017339528806400*cos_th1_thb*sin_th2 - 6517904929456128*sin_th1_thb*cos_th4 + 45662053555613803*cos_th1_thb*sin_th2_th3 - 87960930222080*T*sin_thb - 175921860444160*lb*cos_thb + 3258952464728064*sin_th1_thb*cos_th4*cos_th5 - 6517904929456128*sin_th1_thb*sin_th4*sin_th5 - 6517904929456128*cos_th2_th3*cos_th1_thb*sin_th4 + 21110623253299200*cos_th1_thb*sin_th2_th3*cos_th5 - 12681545666127225*3**0.5*sin_th1_thb*cos_th4 + 6517904929456128*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5 + 3258952464728064*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4 + 7036874417766400*3**0.5*sin_th1_thb*cos_th4*cos_th5 - 14073748835532800*3**0.5*sin_th1_thb*sin_th4*sin_th5 - 12681545666127225*3**0.5*cos_th2_th3*cos_th1_thb*sin_th4 + 3258952464728064*3**0.5*cos_th1_thb*sin_th2_th3*cos_th5 + 14073748835532800*3**0.5*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5 + 7036874417766400*3**0.5*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4))/(175921860444160*T)
    
    J[1, 7] = (Rw*(1231453023109120*sin_th1_thb - 51017339528806400*cos_th1_thb*sin_th2 - 6517904929456128*sin_th1_thb*cos_th4 + 45662053555613803*cos_th1_thb*sin_th2_th3 + 87960930222080*T*sin_thb - 175921860444160*lb*cos_thb + 3258952464728064*sin_th1_thb*cos_th4*cos_th5 - 6517904929456128*sin_th1_thb*sin_th4*sin_th5 - 6517904929456128*cos_th2_th3*cos_th1_thb*sin_th4 + 21110623253299200*cos_th1_thb*sin_th2_th3*cos_th5 - 12681545666127225*3**0.5*sin_th1_thb*cos_th4 + 6517904929456128*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5 + 3258952464728064*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4 + 7036874417766400*3**0.5*sin_th1_thb*cos_th4*cos_th5 - 14073748835532800*3**0.5*sin_th1_thb*sin_th4*sin_th5 - 12681545666127225*3**0.5*cos_th2_th3*cos_th1_thb*sin_th4 + 3258952464728064*3**0.5*cos_th1_thb*sin_th2_th3*cos_th5 + 14073748835532800*3**0.5*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5 + 7036874417766400*3**0.5*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4))/(175921860444160*T)
    
    J[2, 0] = 0
    
    J[2, 1] = 290*sin_th2 - (45662053555613803*sin_th2_th3)/175921860444160 - (2223*cos_th2_th3*sin(th4 + th5))/80 + (741*cos_th2_th3*sin_th4)/20 - 120*sin_th2_th3*cos_th5 + (741*cos_th2_th3*sin_th4_th5)/80 - 60*3**0.5*cos_th2_th3*sin(th4 + th5) + (2536309133225445*3**0.5*cos_th2_th3*sin_th4)/35184372088832 - (741*3**0.5*sin_th2_th3*cos_th5)/40 + 20*3**0.5*cos_th2_th3*sin_th4_th5
    
    J[2, 2] = (45662053555613803*sin_th2_th3)/175921860444160 - (741*cos_th2_th3*sin_th4)/20 + 120*sin_th2_th3*cos_th5 + (741*cos_th2_th3*cos_th4*sin_th5)/20 + (741*cos_th2_th3*cos_th5*sin_th4)/40 - (2536309133225445*3**0.5*cos_th2_th3*sin_th4)/35184372088832 + (741*3**0.5*sin_th2_th3*cos_th5)/40 + 80*3**0.5*cos_th2_th3*cos_th4*sin_th5 + 40*3**0.5*cos_th2_th3*cos_th5*sin_th4
    
    J[2, 3] = (sin_th2_th3*(1629476232364032*cos_th4_th5 - 4888428697092096*cos(th4 + th5) + 6517904929456128*cos_th4 - 10555311626649600*3**0.5*cos(th4 + th5) + 12681545666127225*3**0.5*cos_th4 + 3518437208883200*3**0.5*cos_th4_th5))/175921860444160
    
    J[2, 4] = - (2223*sin_th2_th3*cos(th4 + th5))/80 - 120*cos_th2_th3*sin_th5 - (741*cos_th4_th5*sin_th2_th3)/80 - 60*3**0.5*sin_th2_th3*cos(th4 + th5) - (741*3**0.5*cos_th2_th3*sin_th5)/40 - 20*3**0.5*cos_th4_th5*sin_th2_th3
    
    J[2, 5] = 0
    
    J[2, 6] = 0
    
    J[2, 7] = 0
    
    J[3, 0] = 0
    
    J[3, 1] = ((cos_th6*((3*cos_th2_th3*cos(th4 + th5))/4 + (cos_th2_th3*cos_th4_th5)/4 - (3**0.5*sin_th2_th3*sin_th5)/2) - sin_th6*((3*cos_th2_th3*sin(th4 + th5))/8 - (cos_th2_th3*sin_th4_th5)/8 + (3**0.5*sin_th2_th3*cos_th5)/4) + (3**0.5*sin_th6*(sin_th2_th3/2 - (3**0.5*cos_th2_th3*sin_th4)/2))/2)/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4) + ((sin_th2_th3/4 + (3**0.5*((3*cos_th2_th3*sin(th4 + th5))/4 - (cos_th2_th3*sin_th4_th5)/4 + (3**0.5*sin_th2_th3*cos_th5)/2))/2 - (3**0.5*cos_th2_th3*sin_th4)/4)*(sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2))/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2)/((sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)**2/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2 + 1)
    
    J[3, 2] = -((cos_th6*((3*cos_th2_th3*cos(th4 + th5))/4 + (cos_th2_th3*cos_th4_th5)/4 - (3**0.5*sin_th2_th3*sin_th5)/2) - sin_th6*((3*cos_th2_th3*sin(th4 + th5))/8 - (cos_th2_th3*sin_th4_th5)/8 + (3**0.5*sin_th2_th3*cos_th5)/4) + (3**0.5*sin_th6*(sin_th2_th3/2 - (3**0.5*cos_th2_th3*sin_th4)/2))/2)/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4) + ((sin_th2_th3/4 + (3**0.5*((3*cos_th2_th3*sin(th4 + th5))/4 - (cos_th2_th3*sin_th4_th5)/4 + (3**0.5*sin_th2_th3*cos_th5)/2))/2 - (3**0.5*cos_th2_th3*sin_th4)/4)*(sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2))/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2)/((sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)**2/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2 + 1)
    
    J[3, 3] = -((sin_th2_th3*(3*cos_th4*sin_th6 - 2*sin_th4*sin_th5*sin_th6 + cos_th4*cos_th5*sin_th6 + 2*cos_th4*cos_th6*sin_th5 + 4*cos_th5*cos_th6*sin_th4))/(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4) - (2*3**0.5*sin_th2_th3*(2*cos_th4 - 2*cos_th4*cos_th5 + 4*sin_th4*sin_th5)*((3*sin_th2_th3*sin_th4*sin_th6)/4 + (3**0.5*cos_th2_th3*sin_th6)/4 - sin_th2_th3*cos_th4*cos_th5*cos_th6 + (sin_th2_th3*cos_th4*sin_th5*sin_th6)/2 + (sin_th2_th3*cos_th5*sin_th4*sin_th6)/4 + (sin_th2_th3*cos_th6*sin_th4*sin_th5)/2 - (3**0.5*cos_th2_th3*cos_th5*sin_th6)/4 - (3**0.5*cos_th2_th3*cos_th6*sin_th5)/2))/(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2)/((sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2/(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + 1)
    
    J[3, 4] = ((cos_th6*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2) - sin_th6*((3*sin_th2_th3*cos(th4 + th5))/8 + (cos_th4_th5*sin_th2_th3)/8 + (3**0.5*cos_th2_th3*sin_th5)/4))/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4) + (3**0.5*(sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2))/(2*(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2))/((sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)**2/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2 + 1)
    
    J[3, 5] = -(sin_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - cos_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + (3**0.5*cos_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)/(((sin_th6*((sin_th2_th3*sin_th4_th5)/8 - (3*sin_th2_th3*sin(th4 + th5))/8 + (3**0.5*cos_th2_th3*cos_th5)/4) + cos_th6*((3*sin_th2_th3*cos(th4 + th5))/4 + (cos_th4_th5*sin_th2_th3)/4 + (3**0.5*cos_th2_th3*sin_th5)/2) - (3**0.5*sin_th6*(cos_th2_th3/2 + (3**0.5*sin_th2_th3*sin_th4)/2))/2)**2/(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4)**2 + 1)*(cos_th2_th3/4 + (3**0.5*((sin_th2_th3*sin_th4_th5)/4 - (3*sin_th2_th3*sin(th4 + th5))/4 + (3**0.5*cos_th2_th3*cos_th5)/2))/2 + (3**0.5*sin_th2_th3*sin_th4)/4))
    
    J[3, 6] = 0
    
    J[3, 7] = 0
    
    J[4, 0] = 0
    
    J[4, 1] = ((3*cos_th2_th3*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th5*sin_th6)/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**0.5 + ((2*(sin_th2_th3 + 3*sin_th2_th3*cos_th5 - 3**0.5*cos_th2_th3*sin_th4 + 2*3**0.5*cos_th2_th3*cos_th4*sin_th5 + 3**0.5*cos_th2_th3*cos_th5*sin_th4)*(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4) - 2*(2*cos_th6*(cos_th2_th3*sin_th4*sin_th5 - 2*cos_th2_th3*cos_th4*cos_th5 + 3**0.5*sin_th2_th3*sin_th5) + sin_th6*(2*cos_th2_th3*cos_th4*sin_th5 + cos_th2_th3*cos_th5*sin_th4 + 3**0.5*sin_th2_th3*cos_th5) + sin_th6*(3*cos_th2_th3*sin_th4 - 3**0.5*sin_th2_th3))*(sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3)))*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(2*((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**1.5))/((3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)**2/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2) + 1)
    
    J[4, 2] = -((3*cos_th2_th3*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th5*sin_th6)/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**0.5 + ((2*(sin_th2_th3 + 3*sin_th2_th3*cos_th5 - 3**0.5*cos_th2_th3*sin_th4 + 2*3**0.5*cos_th2_th3*cos_th4*sin_th5 + 3**0.5*cos_th2_th3*cos_th5*sin_th4)*(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4) - 2*(2*cos_th6*(cos_th2_th3*sin_th4*sin_th5 - 2*cos_th2_th3*cos_th4*cos_th5 + 3**0.5*sin_th2_th3*sin_th5) + sin_th6*(2*cos_th2_th3*cos_th4*sin_th5 + cos_th2_th3*cos_th5*sin_th4 + 3**0.5*sin_th2_th3*cos_th5) + sin_th6*(3*cos_th2_th3*sin_th4 - 3**0.5*sin_th2_th3))*(sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3)))*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(2*((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**1.5))/((3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)**2/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2) + 1)
    
    J[4, 3] = -((sin_th2_th3*(2*cos_th4*sin_th5*sin_th6 - 3*cos_th4*cos_th6 + 4*cos_th5*sin_th4*sin_th6 + 2*cos_th6*sin_th4*sin_th5 - cos_th4*cos_th5*cos_th6))/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**0.5 + ((2*sin_th2_th3*(sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))*(3*cos_th4*sin_th6 - 2*sin_th4*sin_th5*sin_th6 + cos_th4*cos_th5*sin_th6 + 2*cos_th4*cos_th6*sin_th5 + 4*cos_th5*cos_th6*sin_th4) + 2*3**0.5*sin_th2_th3*(cos_th4 - cos_th4*cos_th5 + 2*sin_th4*sin_th5)*(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4))*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(2*((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**1.5))/((3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)**2/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2) + 1)
    
    J[4, 4] = ((2*sin_th2_th3*cos_th4*cos_th5*cos_th6 - 4*sin_th2_th3*cos_th4*sin_th5*sin_th6 - 2*sin_th2_th3*cos_th5*sin_th4*sin_th6 - sin_th2_th3*cos_th6*sin_th4*sin_th5 + 2*3**0.5*cos_th2_th3*cos_th5*sin_th6 + 3**0.5*cos_th2_th3*cos_th6*sin_th5)/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**0.5 - ((2*(2*cos_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) + sin_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5))*(sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3)) - 2*(3*cos_th2_th3*sin_th5 + 2*3**0.5*sin_th2_th3*cos_th4*cos_th5 - 3**0.5*sin_th2_th3*sin_th4*sin_th5)*(cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4))*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(2*((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**1.5))/((3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)**2/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2) + 1)
    
    J[4, 5] = -((3*sin_th2_th3*sin_th4*sin_th6 + 3**0.5*cos_th2_th3*sin_th6 - 4*sin_th2_th3*cos_th4*cos_th5*cos_th6 + 2*sin_th2_th3*cos_th4*sin_th5*sin_th6 + sin_th2_th3*cos_th5*sin_th4*sin_th6 + 2*sin_th2_th3*cos_th6*sin_th4*sin_th5 - 3**0.5*cos_th2_th3*cos_th5*sin_th6 - 2*3**0.5*cos_th2_th3*cos_th6*sin_th5)/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**0.5 + ((cos_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) + cos_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3) + 2*sin_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5))*(sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2)**1.5)/((3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)**2/((cos_th2_th3 + 3*cos_th2_th3*cos_th5 + 3**0.5*sin_th2_th3*sin_th4 - 2*3**0.5*sin_th2_th3*cos_th4*sin_th5 - 3**0.5*sin_th2_th3*cos_th5*sin_th4)**2 + (sin_th6*(2*sin_th2_th3*cos_th4*sin_th5 + sin_th2_th3*cos_th5*sin_th4 - 3**0.5*cos_th2_th3*cos_th5) - 2*cos_th6*(2*sin_th2_th3*cos_th4*cos_th5 - sin_th2_th3*sin_th4*sin_th5 + 3**0.5*cos_th2_th3*sin_th5) + sin_th6*(3*sin_th2_th3*sin_th4 + 3**0.5*cos_th2_th3))**2) + 1)
    
    J[4, 6] = 0
    
    J[4, 7] = 0
    
    J[5, 0] = -1
    
    J[5, 1] = ((sin_th1_thb*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6) - (cos_th1_thb*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)*(2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2)/((2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6)**2/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2 + 1)
    
    J[5, 2] = -((sin_th1_thb*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6) - (cos_th1_thb*(3*sin_th2_th3*cos_th6*sin_th4 + 3**0.5*cos_th2_th3*cos_th6 + 4*sin_th2_th3*cos_th4*cos_th5*sin_th6 + 2*sin_th2_th3*cos_th4*cos_th6*sin_th5 + sin_th2_th3*cos_th5*cos_th6*sin_th4 - 2*sin_th2_th3*sin_th4*sin_th5*sin_th6 - 3**0.5*cos_th2_th3*cos_th5*cos_th6 + 2*3**0.5*cos_th2_th3*sin_th5*sin_th6)*(2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2)/((2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6)**2/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2 + 1)
    
    J[5, 3] = -((3*cos_th1_thb*cos_th6*sin_th4 + 4*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6 + cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4*sin_th5)/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6) + ((3*sin_th1_thb*cos_th6*sin_th4 + 4*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*sin_th1_thb*cos_th4*cos_th6*sin_th5 + sin_th1_thb*cos_th5*cos_th6*sin_th4 - 3*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6 - 2*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5*sin_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4*sin_th5 - cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*cos_th6)*(2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2)/((2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6)**2/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2 + 1)
    
    J[5, 4] = ((4*cos_th1_thb*sin_th4*sin_th5*sin_th6 - cos_th1_thb*cos_th4*cos_th6*sin_th5 - 2*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th1_thb*cos_th4*cos_th5*sin_th6 - 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th5*sin_th4*sin_th6 + cos_th2_th3*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 2*3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6*sin_th5)/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6) - ((2*sin_th1_thb*cos_th4*cos_th5*sin_th6 + sin_th1_thb*cos_th4*cos_th6*sin_th5 + 2*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 4*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th5*sin_th4*sin_th6 + cos_th2_th3*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 2*3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6*sin_th5 - 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*cos_th6)*(2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2)/((2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6)**2/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2 + 1)
    
    J[5, 5] = ((2*cos_th1_thb*sin_th4*sin_th5*sin_th6 - cos_th1_thb*cos_th4*cos_th5*sin_th6 - 2*cos_th1_thb*cos_th4*cos_th6*sin_th5 - 4*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 3*cos_th1_thb*cos_th4*sin_th6 + 3*cos_th2_th3*sin_th1_thb*sin_th4*sin_th6 - 3**0.5*sin_th2_th3*sin_th1_thb*sin_th6 - 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*cos_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*sin_th5*sin_th6 + cos_th2_th3*sin_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*sin_th6 + 2*3**0.5*sin_th2_th3*sin_th1_thb*cos_th6*sin_th5)/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6) - ((3*sin_th1_thb*cos_th4*sin_th6 + sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*sin_th1_thb*cos_th4*cos_th6*sin_th5 + 4*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3*cos_th2_th3*cos_th1_thb*sin_th4*sin_th6 - 3**0.5*cos_th1_thb*sin_th2_th3*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*sin_th5*sin_th6 + cos_th2_th3*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*sin_th6 + 2*3**0.5*cos_th1_thb*sin_th2_th3*cos_th6*sin_th5 - 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*cos_th6)*(2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6))/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2)/((2*cos_th1_thb*cos_th4*sin_th5*sin_th6 - 3*cos_th1_thb*cos_th4*cos_th6 + 4*cos_th1_thb*cos_th5*sin_th4*sin_th6 + 2*cos_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*sin_th1_thb*cos_th6*sin_th4 - 3**0.5*sin_th2_th3*sin_th1_thb*cos_th6 - cos_th1_thb*cos_th4*cos_th5*cos_th6 + 4*cos_th2_th3*sin_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*sin_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*sin_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*sin_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*sin_th2_th3*sin_th1_thb*cos_th5*cos_th6 - 2*3**0.5*sin_th2_th3*sin_th1_thb*sin_th5*sin_th6)**2/(3*sin_th1_thb*cos_th4*cos_th6 + sin_th1_thb*cos_th4*cos_th5*cos_th6 - 2*sin_th1_thb*cos_th4*sin_th5*sin_th6 - 4*sin_th1_thb*cos_th5*sin_th4*sin_th6 - 2*sin_th1_thb*cos_th6*sin_th4*sin_th5 + 3*cos_th2_th3*cos_th1_thb*cos_th6*sin_th4 - 3**0.5*cos_th1_thb*sin_th2_th3*cos_th6 + 4*cos_th2_th3*cos_th1_thb*cos_th4*cos_th5*sin_th6 + 2*cos_th2_th3*cos_th1_thb*cos_th4*cos_th6*sin_th5 + cos_th2_th3*cos_th1_thb*cos_th5*cos_th6*sin_th4 - 2*cos_th2_th3*cos_th1_thb*sin_th4*sin_th5*sin_th6 + 3**0.5*cos_th1_thb*sin_th2_th3*cos_th5*cos_th6 - 2*3**0.5*cos_th1_thb*sin_th2_th3*sin_th5*sin_th6)**2 + 1)
    
    J[5, 6] = Rw/T
    
    J[5, 7] = -Rw/T


    return J



def get_jacobi_matrix(joint_angles, mobile_base_theta):
    th1, th2, th3, th4, th5, th6 = dh_to_mico(joint_angles.joint1, joint_angles.joint2, joint_angles.joint3,
                                              joint_angles.joint4, joint_angles.joint5, joint_angles.joint6)
    thb = mobile_base_theta
    return calc_jacobi_matrix(th1, th2, th3, th4, th5, th6, thb)



# --------------------------------------------
if __name__ == '__main__':
    # th1, th2, th3, th4, th5, th6 = dh_to_mico(0.0, -pi*2/3, pi/6, 0.0, pi, pi/2)
    th1, th2, th3, th4, th5, th6 = dh_to_mico(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)
    # th1, th2, th3, th4, th5, th6 = dh_to_mico(0.0, -pi/2, -pi/2, 0, pi, pi/2)
    thb = 0.0 #-1.57079637051

    jacobi = calc_jacobi_matrix(th1, th2, th3, th4, th5, th6, thb)
    print('jacobi')
    print(jacobi)
    print(linalg.matrix_rank(jacobi))

    arm_jacobi = jacobi[0:6, 0:6]
    print('arm_jacobi')
    print(arm_jacobi)
    print(linalg.matrix_rank(arm_jacobi))
    print(linalg.inv(arm_jacobi))

    # pinv_jacobi = linalg.pinv(jacobi)
    pinv_jacobi = jacobi.T.dot(linalg.inv(jacobi.dot(jacobi.T)))
    print('pinv_jacobi')
    print(pinv_jacobi)
    print(linalg.matrix_rank(pinv_jacobi))
    print(jacobi.dot(pinv_jacobi))

    th1, th2, th3, th4, th5, th6 = mico_to_dh(th1, th2, th3, th4, th5, th6)
    print(th1, th2, th3, th4, th5, th6)
    trans_mats = TransMatManager().update(th1, th2, th3, th4, th5, th6, thb).trans_mat_list
    trans = reduce(lambda t1, t2: t1*t2, trans_mats)
    print('trans')
    print(trans)
    print(linalg.matrix_rank(trans))
    print(rad2deg(euler_from_matrix(trans)))







    